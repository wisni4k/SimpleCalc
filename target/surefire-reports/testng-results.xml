<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="39" started-at="2015-07-13T12:12:00Z" finished-at="2015-07-13T12:12:00Z">
    <groups>
      <group name="CalcTestMulti">
        <method signature="FailingCases.MultiplyingTestCopy(int, int, int)[pri:0, instance:com.comarch.training.FailingCases@591f989e]" name="MultiplyingTestCopy" class="com.comarch.training.FailingCases"/>
      </group> <!-- CalcTestMulti -->
    </groups>
    <test name="exampletest1" duration-ms="39" started-at="2015-07-13T12:12:00Z" finished-at="2015-07-13T12:12:00Z">
      <class name="com.comarch.training.FailingCases">
        <test-method status="PASS" signature="init()[pri:0, instance:com.comarch.training.FailingCases@591f989e]" name="init" is-config="true" duration-ms="13" started-at="2015-07-13T14:12:00Z" finished-at="2015-07-13T14:12:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="MultiplyingTestCopy(int, int, int)[pri:0, instance:com.comarch.training.FailingCases@591f989e]" name="MultiplyingTestCopy" duration-ms="1" started-at="2015-07-13T14:12:00Z" data-provider="test1" finished-at="2015-07-13T14:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6108b2d7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@1554909b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@6bf256fa]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[argument type mismatch]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: argument type mismatch
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultiplyingTestCopy -->
      </class> <!-- com.comarch.training.FailingCases -->
    </test> <!-- exampletest1 -->
  </suite> <!-- Suite1 -->
</testng-results>
